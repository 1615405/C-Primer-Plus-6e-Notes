Low-level I/O uses the fundamental I/O services provided by the operating system. Standard high-level I/O uses a 
standard package of C library functions and stdio.h header file definition.

C programs automatically open three files on your behalf. They are termed the standard input, the standard output, and 
the standard error output. The standard input, by default, is the normal input device for your system, usually your 
keyboard. Both the standard output and the standard error output, by default, are the normal output divice for your
system, usually your display screen.

The purpose of the standard error output file is to provide a logically distinct place to send error messages. If, for 
example, you use redirection to send output to a file instead of to the screen, output sent to the standard error output
still goes to the screen.

The file pointer (FILE *fp) is of type pointer-to-FILE. FILE is a derived type defined in stdio.h. The pointer fp 
doesn't point to the actual file. Instead, it points to a data object containing information about the file, including
information about the buffer used for the file's I/O.

The fseek() function enables you to treat a file like an array and move directly to any particular byte in a file opened
by fopen(). Note that fseek() has three arguments and returns an int value. The ftell() function returns the current 
position in a file as a long value.