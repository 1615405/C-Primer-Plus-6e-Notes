An expression consists of a combination of operators and operands. (An operand, recall, is what an operator operates on).
The simplest expression is a lone operand.

An important property of C is that every C expression has a value, including assignment expressions and 
comparison expressions.

Statements are the primary building blocks of a program. A program is a series of statements with some necessary 
punctuation. A statement is a complete instruction to the computer.

A side effect is the modification of a data object or file. A sequence point is a point in program execution at which
all side effects are evaluated before going on to the next step. A full expression is one that's not a subexpression
of a larger expression.

In the absence of braces, a while statement runs from the while to the next semicolon;

Variable names are private to the function. This means that a name defined in one function doesn't conflict with the
same name defined elsewhere.
 
A prototype is a function declaration that describes a function's return value and its arguments. This prototype says
two things about the pound() function.
    The function has no return value
    The function takes one argument, which is a type int value.

In C, many type conversions take place automatically. The char and short type are promoted to type int whenever they 
appear in expressions or as function arguments to a function without a prototype.