Consider an assignment statement. Its purpose is to store a value at a memory location,. Data object is a general term 
for a region of data storage that can be used to hold values. The C standard uses just the term object for this concept.
One way to identify an object is by using the name of a variable. But, as you will eventually learn, there are other was
to identify an object. For example, you could specify an element of an array, a member of a structure, or use a pointer
expression that involves the address of the object. C use the term lvalue to mean any such name or expression that 
identifies a particular data object. Object refers to the actual data stroage, but an lvalue is a label used to 
identify, or locate, the storage.

And C added the term modifiable lvalue to identify an object whose value can be changed. Therefore, the left side of an
assignment operator should be a modefiable lvalue.

Rvalues can be constants, variables, or any other expression that yields a value, such as a function call.

income = salary + bribes; As a reminder, note the income, salary, and bribes all are modifiable lvalues because each
identifies a data object that could be assigned a value, but the expression salary + bribes is an rvalue, a 
calculated value not identified with a particular memory location.

The sizeof operator returns the size, in bytes, of its operand. A C byte is defined as the size used by the char
type. The operand can be a specific data object, such as the name of a variable, or it can be a type. If it is a
type, such as float, the operand must be enclosed in parentheses. C says that sizeof returns a value of type size_t;
C99 goes a step further and supplies %zd as a printf() specifier for displaying a size_t value.

In any case, the standard says, in effect, that if a and b are integer values, you can calculate a%b by subtracting
(a/b)*b from a.   -11 % 5: -11 - (-11 / 5) * 5 = -11 + 2 * 5 = -1;

An expression consists of a combination of operators and operands. (An operand, recall, is what an operator operates on)
The simplest expression is a lone operand.

An important property of C is that every C expression has a value, including assignment expressions and 
comparison expressions.

A side effect is the modification of a data object or file. A sequence point is a point in program execution at which
all side effects are evaluated before going on to the next step. A full expression is one that's not a subexpression
of a larger expression.

In the absence of braces, a while statement runs from the while to the next semicolon;

In C, many type conversions take place automatically. The char and short type are promoted to type int whenever they 
appear in expressions or as function arguments to a function without a prototype.